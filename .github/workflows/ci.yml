name: build-and-lint

# This workflow will build the project and run linters on code changes
# Triggered on pushes and pull requests to the main and dev branches
# For more information, see: https://docs.github.com/actions
on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  build-and-lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22"

      - name: Install backend dependencies
        working-directory: ./backend
        run: npm ci

      - name: Run lint backend
        working-directory: ./backend
        run: npm run lint -- --max-warnings=0
        continue-on-error: false

      - name: Install frontend dependencies
        working-directory: ./TodoApp
        run: npm ci

      - name: Run lint frontend
        working-directory: ./TodoApp
        run: npm run lint -- --max-warnings=0
        continue-on-error: false

      - name: Build backend image
        run: docker build -t backend-image ./backend

      - name: Build frontend image
        run: docker build -t frontend-image ./TodoApp

  deploy:
    needs: build-and-lint
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Add EC2 host to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H "$EC2_HOST" >> ~/.ssh/known_hosts
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}

      - name: Write SSH key
        run: |
          echo "$EC2_KEY" > ec2_key.pem
          chmod 600 ec2_key.pem
        env:
          EC2_KEY: ${{ secrets.EC2_KEY }}

      - name: Deploy on EC2 (git pull + docker compose up -d --build)
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_APP_DIR: ${{ secrets.EC2_APP_DIR }}
        run: |
          ssh -i ec2_key.pem ${EC2_USER}@${EC2_HOST} << EOF
            set -e 
            cd "${EC2_APP_DIR}"

            git fetch --all
            git reset --hard origin/main

            docker compose up -d --build
            
            docker image prune -f

            docker compose ps
          EOF
